"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[35582],{15680:(e,a,t)=>{t.d(a,{xA:()=>d,yg:()=>u});var n=t(296540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function g(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),p=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(o.Provider,{value:a},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},s=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,d=g(e,["components","mdxType","originalType","parentName"]),y=p(t),s=r,u=y["".concat(o,".").concat(s)]||y[s]||m[s]||l;return t?n.createElement(u,i(i({ref:a},d),{},{components:t})):n.createElement(u,i({ref:a},d))}));function u(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=s;var g={};for(var o in a)hasOwnProperty.call(a,o)&&(g[o]=a[o]);g.originalType=e,g[y]="string"==typeof e?e:r,i[1]=g;for(var p=2;p<l;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}s.displayName="MDXCreateElement"},27782:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>g,toc:()=>p});var n=t(58168),r=(t(296540),t(15680));const l={title:"JDBC",language:"en"},i=void 0,g={unversionedId:"lakehouse/multi-catalog/jdbc",id:"version-2.1/lakehouse/multi-catalog/jdbc",title:"JDBC",description:"\x3c!--",source:"@site/versioned_docs/version-2.1/lakehouse/multi-catalog/jdbc.md",sourceDirName:"lakehouse/multi-catalog",slug:"/lakehouse/multi-catalog/jdbc",permalink:"/docs/lakehouse/multi-catalog/jdbc",draft:!1,tags:[],version:"2.1",frontMatter:{title:"JDBC",language:"en"},sidebar:"docs",previous:{title:"Elasticsearch",permalink:"/docs/lakehouse/multi-catalog/es"},next:{title:"Cloud Service Authentication",permalink:"/docs/lakehouse/cloud-auth/"}},o={},p=[{value:"Usage",id:"usage",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameter Description",id:"parameter-description",level:2},{value:"Driver path",id:"driver-path",level:3},{value:"Lowercase name synchronization",id:"lowercase-name-synchronization",level:3},{value:"Specify synchronization database:",id:"specify-synchronization-database",level:3},{value:"Query",id:"query",level:2},{value:"Example",id:"example",level:3},{value:"Predicate Pushdown",id:"predicate-pushdown",level:3},{value:"Line Limit",id:"line-limit",level:3},{value:"Write Data",id:"write-data",level:2},{value:"Example",id:"example-1",level:3},{value:"Transaction",id:"transaction",level:3},{value:"JDBC Connection Pool Configuration",id:"jdbc-connection-pool-configuration",level:2},{value:"Guide",id:"guide",level:2},{value:"View the JDBC catalog",id:"view-the-jdbc-catalog",level:3},{value:"Drop the JDBC catalog",id:"drop-the-jdbc-catalog",level:3},{value:"Query the JDBC catalog",id:"query-the-jdbc-catalog",level:3},{value:"SQL Passthrough",id:"sql-passthrough",level:2},{value:"Principles and Limitations",id:"principles-and-limitations",level:3},{value:"Supported Datasoures",id:"supported-datasoures",level:2},{value:"MySQL",id:"mysql",level:3},{value:"Example",id:"example-2",level:4},{value:"Hierarchy Mapping",id:"hierarchy-mapping",level:4},{value:"Type Mapping",id:"type-mapping",level:4},{value:"PostgreSQL",id:"postgresql",level:3},{value:"Example",id:"example-3",level:4},{value:"Hierarchy Mapping",id:"hierarchy-mapping-1",level:4},{value:"Type Mapping",id:"type-mapping-1",level:4},{value:"Oracle",id:"oracle",level:3},{value:"Example",id:"example-4",level:4},{value:"Hierarchy Mapping",id:"hierarchy-mapping-2",level:4},{value:"Type Mapping",id:"type-mapping-2",level:4},{value:"SQLServer",id:"sqlserver",level:3},{value:"Example",id:"example-5",level:4},{value:"Hierarchy Mapping",id:"hierarchy-mapping-3",level:4},{value:"Type Mapping",id:"type-mapping-3",level:4},{value:"Doris",id:"doris",level:3},{value:"Type Mapping",id:"type-mapping-4",level:4},{value:"Clickhouse",id:"clickhouse",level:3},{value:"Example",id:"example-6",level:4},{value:"Hierarchy Mapping",id:"hierarchy-mapping-4",level:4},{value:"Type Mapping",id:"type-mapping-5",level:4},{value:"SAP HANA",id:"sap-hana",level:3},{value:"Example",id:"example-7",level:4},{value:"Hierarchy Mapping",id:"hierarchy-mapping-5",level:4},{value:"Type Mapping",id:"type-mapping-6",level:4},{value:"Trino/Presto",id:"trinopresto",level:3},{value:"Example",id:"example-8",level:4},{value:"Hierarchy Mapping",id:"hierarchy-mapping-6",level:4},{value:"Type Mapping",id:"type-mapping-7",level:4},{value:"OceanBase",id:"oceanbase",level:3},{value:"Example",id:"example-9",level:4},{value:"DB2",id:"db2",level:3},{value:"Example",id:"example-10",level:4},{value:"Hierarchy Mapping",id:"hierarchy-mapping-7",level:4},{value:"Type Mapping",id:"type-mapping-8",level:4},{value:"JDBC Drivers",id:"jdbc-drivers",level:2},{value:"FAQ",id:"faq",level:2}],d={toc:p},y="wrapper";function m(e){let{components:a,...t}=e;return(0,r.yg)(y,(0,n.A)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"jdbc"},"JDBC"),(0,r.yg)("p",null,"JDBC catalogs in Doris allows for connecting to external data sources using the standard JDBC protocol."),(0,r.yg)("p",null,"Once connected, Doris will ingest database and table metadata in order to enable quick access to data in the external data sources."),(0,r.yg)("h2",{id:"usage"},"Usage"),(0,r.yg)("p",null,"Supported data sources are MySQL, PostgreSQL, Oracle, SQLServer, Clickhouse, Doris, SAP HANA, Trino and OceanBase."),(0,r.yg)("h2",{id:"syntax"},"Syntax"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG <catalog_name>\nPROPERTIES ("key" = "value", ...)\n')),(0,r.yg)("h2",{id:"parameter-description"},"Parameter Description"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:null},"Required or Not"),(0,r.yg)("th",{parentName:"tr",align:null},"Default Value"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"user")),(0,r.yg)("td",{parentName:"tr",align:null},"Yes"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Username for the external database")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"password")),(0,r.yg)("td",{parentName:"tr",align:null},"Yes"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Password for the external database")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"jdbc_url ")),(0,r.yg)("td",{parentName:"tr",align:null},"Yes"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"JDBC connection string")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"driver_url ")),(0,r.yg)("td",{parentName:"tr",align:null},"Yes"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"JDBC driver JAR file")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"driver_class ")),(0,r.yg)("td",{parentName:"tr",align:null},"Yes"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"JDBC driver class")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"only_specified_database")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"false"),(0,r.yg)("td",{parentName:"tr",align:null},"Whether only the specified database should be synchronized.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"lower_case_meta_names")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"false"),(0,r.yg)("td",{parentName:"tr",align:null},"Whether to synchronize the database name, table name and column name of the external JDBC data source in lowercase.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"meta_names_mapping")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"When the JDBC external data source has the same name but different case, e.g. DORIS and doris, Doris reports an error when querying the catalog due to ambiguity. In this case, the ",(0,r.yg)("inlineCode",{parentName:"td"},"meta_names_mapping")," parameter needs to be specified to resolve the conflict.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"include_database_list")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"When ",(0,r.yg)("inlineCode",{parentName:"td"},"only_specified_database = true"),"\uff0conly synchronize the specified databases. Separate with ",(0,r.yg)("inlineCode",{parentName:"td"},","),". Database name is case sensitive.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"exclude_database_list")),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"When ",(0,r.yg)("inlineCode",{parentName:"td"},"only_specified_database = true"),"\uff0cdo not synchronize the specified databases. Separate with ",(0,r.yg)("inlineCode",{parentName:"td"},","),". Database name is case sensitive.")))),(0,r.yg)("h3",{id:"driver-path"},"Driver path"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"driver_url")," can be specified in three ways:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"File name. For example, ",(0,r.yg)("inlineCode",{parentName:"p"},"mysql-connector-java-8.0.25.jar"),". Place the the JAR file in a directory ",(0,r.yg)("inlineCode",{parentName:"p"},"jdbc_drivers")," under the Doris ",(0,r.yg)("inlineCode",{parentName:"p"},"fe")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"be")," installation directories. I.e. create two directories ",(0,r.yg)("inlineCode",{parentName:"p"},"/fe/jdbc_drivers")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"/be/jdbc_drivers")," and place a JAR file in each of them. You may have to create the ",(0,r.yg)("inlineCode",{parentName:"p"},"jdbc_drivers")," directories manually. Make sure the directories are readable and preferably owned by the Doris user. You can change the location of the driver files by modifying the ",(0,r.yg)("inlineCode",{parentName:"p"},"jdbc_drivers_dir")," property in the ",(0,r.yg)("inlineCode",{parentName:"p"},"fe.conf")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"be.conf")," configuration files.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Local absolute path. For example, ",(0,r.yg)("inlineCode",{parentName:"p"},"file:///path/to/mysql-connector-java-8.0.25.jar"),". Please place the JAR file in the specified paths of FE/BE node.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"HTTP address. For example, ",(0,r.yg)("inlineCode",{parentName:"p"},"https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/jdbc_driver/mysql-connector-java-8.0.25.jar"),". The system will download the driver file from the HTTP address. This only supports HTTP and HTTPS services with no authentication requirements."))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Driver package security")),(0,r.yg)("p",null,"In order to prevent the use of a driver JAR package with a disallowed path when creating the catalog, Doris will perform path management and checksum checking on the JAR package."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"For the above method 1, the ",(0,r.yg)("inlineCode",{parentName:"p"},"jdbc_drivers_dir")," configured by the Doris default user and all JAR packages in its directory are safe and will not be path checked.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"For the above methods 2 and 3, Doris will check the source of the JAR package. The checking rules are as follows:"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Control the allowed driver package paths through the FE configuration item ",(0,r.yg)("inlineCode",{parentName:"li"},"jdbc_driver_secure_path"),". This configuration item can configure multiple paths, separated by semicolons. When this item is configured, Doris will check whether the prefix of the ",(0,r.yg)("inlineCode",{parentName:"li"},"driver_url")," path in the catalog properties is in ",(0,r.yg)("inlineCode",{parentName:"li"},"jdbc_driver_secure_path"),". If not, it will refuse to create the catalog."),(0,r.yg)("li",{parentName:"ul"},"This parameter defaults to ",(0,r.yg)("inlineCode",{parentName:"li"},"*"),", which means JAR packages of all paths are allowed."),(0,r.yg)("li",{parentName:"ul"},"If the configuration ",(0,r.yg)("inlineCode",{parentName:"li"},"jdbc_driver_secure_path")," is empty, driver packages for all paths are not allowed, which means that the driver package can only be specified using method 1 above.")),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},"If you configure ",(0,r.yg)("inlineCode",{parentName:"p"},'jdbc_driver_secure_path = "file:///path/to/jdbc_drivers;http://path/to/jdbc_drivers"'),", only ",(0,r.yg)("inlineCode",{parentName:"p"},"file:///path/to/jdbc_drivers")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"http:// is allowed The driver package path starting with path/to/jdbc_drivers"),"."))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"When creating a catalog, you can specify the checksum of the driver package through the ",(0,r.yg)("inlineCode",{parentName:"p"},"checksum")," parameter. Doris will verify the driver package after loading the driver package. If the verification fails, it will refuse to create the catalog."))),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"The above verification will only be performed when the catalog is created. For already created catalogs, verification will not be performed again.")),(0,r.yg)("h3",{id:"lowercase-name-synchronization"},"Lowercase name synchronization"),(0,r.yg)("p",null,"When ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_meta_names")," is set to ",(0,r.yg)("inlineCode",{parentName:"p"},"true"),", Doris maintains the mapping of lowercase names to actual names in the remote system, enabling queries to use lowercase to query non-lowercase databases, tables and columns of external data sources."),(0,r.yg)("p",null,"Since FE has the ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," parameter, it will affect the table name case rules during query, so the rules are as follows"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"When FE ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," config is 0"),(0,r.yg)("p",{parentName:"li"},"lower_case_meta_names = false, the case is consistent with the source library.\nlower_case_meta_names = true, lowercase repository table column names.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"When FE ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," config is 1"),(0,r.yg)("p",{parentName:"li"},"lower_case_meta_names = false, the case of db and column is consistent with the source library, but the table is stored in lowercase\nlower_case_meta_names = true, lowercase repository table column names.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"When FE ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," config is 2"),(0,r.yg)("p",{parentName:"li"},"lower_case_meta_names = false, the case is consistent with the source library.\nlower_case_meta_names = true, lowercase repository table column names."))),(0,r.yg)("p",null,"If the parameter configuration when creating the catalog matches the lowercase conversion rule in the above rules, Doris will convert the corresponding name to lowercase and store it in Doris. When querying, you need to use the lowercase name displayed by Doris."),(0,r.yg)("p",null,"If the external data source has the same name but different case, such as DORIS and doris, Doris will report an error when querying the catalog due to ambiguity. In this case, you need to configure the ",(0,r.yg)("inlineCode",{parentName:"p"},"meta_names_mapping")," parameter to resolve the conflict."),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"meta_names_mapping")," parameter accepts a Json format string with the following format:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "databases": [\n    {\n      "remoteDatabase": "DORIS",\n      "mapping": "doris_1"\n    },\n    {\n      "remoteDatabase": "doris",\n      "mapping": "doris_2"\n    }],\n  "tables": [\n    {\n      "remoteDatabase": "DORIS",\n      "remoteTable": "DORIS",\n      "mapping": "doris_1"\n    },\n    {\n      "remoteDatabase": "DORIS",\n      "remoteTable": "doris",\n      "mapping": "doris_2"\n    }],\n  "columns": [\n    {\n      "remoteDatabase": "DORIS",\n      "remoteTable": "DORIS",\n      "remoteColumn": "DORIS",\n      "mapping": "doris_1"\n    },\n    {\n      "remoteDatabase": "DORIS",\n      "remoteTable": "DORIS",\n      "remoteColumn": "doris",\n      "mapping": "doris_2"\n    }]\n}\n')),(0,r.yg)("p",null,"When filling this configuration into the statement that creates the catalog, there are double quotes in Json, so you need to escape the double quotes or directly use single quotes to wrap the Json string when filling in."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_catalog PROPERTIES (\n    ...\n    "meta_names_mapping" = "{\\"databases\\":[{\\"remoteDatabase\\":\\"DORIS\\",\\"mapping\\":\\"doris_1\\"},{\\"remoteDatabase\\":\\"doris\\",\\"mapping\\":\\"doris_2\\"}]}"\n    ...\n);\n')),(0,r.yg)("p",null,"\u6216\u8005"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_catalog PROPERTIES (\n    ...\n    "meta_names_mapping" = \'{"databases":[{"remoteDatabase":"DORIS","mapping":"doris_1"},{"remoteDatabase":"doris","mapping":"doris_2"}]}\'\n    ...\n);\n\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Notice:")),(0,r.yg)("p",null,"JDBC catalog has the following three stages for mapping rules for external table case:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Doris versions prior to 2.0.3"),(0,r.yg)("p",{parentName:"li"},"This configuration name is ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names"),", which is only valid for Oracle database. Setting this parameter to ",(0,r.yg)("inlineCode",{parentName:"p"},"true")," in other data sources will affect the query, so please do not set it."),(0,r.yg)("p",{parentName:"li"},"When querying Oracle, all library names and table names will be converted to uppercase before querying Oracle, for example:"),(0,r.yg)("p",{parentName:"li"},"Oracle has the TEST table in the TEST space. When Doris creates the catalog, set ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," to ",(0,r.yg)("inlineCode",{parentName:"p"},"true"),", then Doris can query the TEST table through ",(0,r.yg)("inlineCode",{parentName:"p"},"select * from oracle_catalog.test.test"),", and Doris will automatically format test.test into TEST.TEST is sent to Oracle. It should be noted that this is the default behavior, which also means that lowercase table names in Oracle cannot be queried.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Doris 2.0.3 version:"),(0,r.yg)("p",{parentName:"li"},"This configuration is called ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," and is valid for all databases. When querying, all library names and table names will be converted into real names and then queried. If you upgrade from an old version to 2.0.3, you need ",(0,r.yg)("inlineCode",{parentName:"p"}," Refresh <catalog_name>")," can take effect."),(0,r.yg)("p",{parentName:"li"},"However, if the library, table, or column names differ only in case, such as ",(0,r.yg)("inlineCode",{parentName:"p"},"Doris")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"doris"),", Doris cannot query them due to ambiguity."),(0,r.yg)("p",{parentName:"li"},"And when the ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," parameter of the FE parameter is set to ",(0,r.yg)("inlineCode",{parentName:"p"},"1")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"2"),", the ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," parameter of the JDBC catalog must be set to ",(0,r.yg)("inlineCode",{parentName:"p"},"true"),". If the ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," of the FE parameter is set to ",(0,r.yg)("inlineCode",{parentName:"p"},"0"),", the JDBC catalog parameter can be ",(0,r.yg)("inlineCode",{parentName:"p"},"true")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"false"),", defaulting to ",(0,r.yg)("inlineCode",{parentName:"p"},"false"),".")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Doris 2.1.0 and later versions:"),(0,r.yg)("p",{parentName:"li"},"In order to avoid confusion with the ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," parameter of FE conf, this configuration name is changed to ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_meta_names"),", which is valid for all databases. During query, all library names, table names and column names will be converted into real names, and then Check it out. If you upgrade from an old version to 2.1.0, you need ",(0,r.yg)("inlineCode",{parentName:"p"},"Refresh <catalog_name>")," to take effect."),(0,r.yg)("p",{parentName:"li"},"For specific rules, please refer to the introduction of ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_meta_names")," at the beginning of this section."),(0,r.yg)("p",{parentName:"li"},"Users who have previously set the JDBC catalog ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," parameter will automatically have ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_table_names")," converted to ",(0,r.yg)("inlineCode",{parentName:"p"},"lower_case_meta_names")," when upgrading to 2.1.0."))),(0,r.yg)("h3",{id:"specify-synchronization-database"},"Specify synchronization database:"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"only_specified_database"),":\nWhen the JDBC is connected, you can specify which database/schema to connect. For example, you can specify the DataBase in mysql ",(0,r.yg)("inlineCode",{parentName:"p"},"jdbc_url"),"; you can specify the CurrentSchema in PG ",(0,r.yg)("inlineCode",{parentName:"p"},"jdbc_url"),"."),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"include_database_list"),":\nIt only takes effect when ",(0,r.yg)("inlineCode",{parentName:"p"},"only_specified_database=true"),", specify the database that needs to be synchronized, separated by ',', and the db name is case-sensitive."),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"exclude_database_list"),":\nIt only takes effect when ",(0,r.yg)("inlineCode",{parentName:"p"},"only specified database=true"),", specifies multiple databases that do not need to be synchronized, separated by ',', and the db name is case-sensitive."),(0,r.yg)("p",null,"When ",(0,r.yg)("inlineCode",{parentName:"p"},"include_database_list")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"exclude_database_list")," specify overlapping databases, ",(0,r.yg)("inlineCode",{parentName:"p"},"exclude_database_list")," would take effect with higher privilege over ",(0,r.yg)("inlineCode",{parentName:"p"},"include_database_list"),"."),(0,r.yg)("p",null,"If you connect the Oracle database when using this property, please  use the version of the jar package above 8 or more (such as ojdbc8.jar)."),(0,r.yg)("h2",{id:"query"},"Query"),(0,r.yg)("h3",{id:"example"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"select * from mysql_catalog.mysql_database.mysql_table where k1 > 1000 and k3 ='term';\n")),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},'In some cases, the keywords in the database might be used as the field names. For queries to function normally in these cases, Doris will add escape characters to the field names and tables names in SQL statements based on the rules of different databases, such as (``) for MySQL, ([]) for SQLServer, and ("") for PostgreSQL and Oracle. This might require extra attention on case sensitivity. You can view the query statements sent to these various databases via ',(0,r.yg)("inlineCode",{parentName:"p"},"explain sql"),".")),(0,r.yg)("h3",{id:"predicate-pushdown"},"Predicate Pushdown"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"When executing a query like ",(0,r.yg)("inlineCode",{parentName:"p"},"where dt = '2022-01-01'"),", Doris can push down these filtering conditions to the external data source, thereby directly excluding data that does not meet the conditions at the data source level, reducing the number of unqualified Necessary data acquisition and transfer. This greatly improves query performance while also reducing the load on external data sources.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"When variable ",(0,r.yg)("inlineCode",{parentName:"p"},"enable_ext_func_pred_pushdown")," is set to true, the function conditions after where will also be pushed down to the external data source. Currently, only MySQL, ClickHouse, and Oracle are supported. If you encounter functions that are not supported by MySQL, ClickHouse, and Oracle, you can use this The parameter is set to false. At present, Doris will automatically identify some functions that are not supported by MySQL and functions supported by CLickHouse and Oracle for push-down condition filtering. You can view them through explain sql."))),(0,r.yg)("p",null,"Functions that are currently not pushed down include:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"MYSQL"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"DATE_TRUNC")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"MONEY_FORMAT")))),(0,r.yg)("p",null,"Functions that are currently pushed down include:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"ClickHouse"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"FROM_UNIXTIME")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"UNIX_TIMESTAMP")))),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Oracle"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"NVL")))),(0,r.yg)("h3",{id:"line-limit"},"Line Limit"),(0,r.yg)("p",null,"If there is a limit keyword in the query, Doris will translate it into semantics suitable for different data sources."),(0,r.yg)("h2",{id:"write-data"},"Write Data"),(0,r.yg)("p",null,"After the JDBC catalog is established in Doris, you can write data directly through the insert into statement, or write the results of the query executed by Doris into the JDBC catalog, or import data from one JDBC catalog to another JDBC catalog."),(0,r.yg)("h3",{id:"example-1"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'insert into mysql_catalog.mysql_database.mysql_table values(1, "doris");\ninsert into mysql_catalog.mysql_database.mysql_table select * from table;\n')),(0,r.yg)("h3",{id:"transaction"},"Transaction"),(0,r.yg)("p",null,"In Doris, data is written to External Tables in batches. If the ingestion process is interrupted, rollbacks might be required. That's why JDBC catalog tables support data writing transactions. You can utilize this feature by setting the session variable: ",(0,r.yg)("inlineCode",{parentName:"p"},"enable_odbc_transcation "),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"set enable_odbc_transcation = true; \n")),(0,r.yg)("p",null,"The transaction mechanism ensures the atomicity of data writing to JDBC External Tables, but it reduces performance to a certain extent. You may decide whether to enable transactions based on your own tradeoff."),(0,r.yg)("h2",{id:"jdbc-connection-pool-configuration"},"JDBC Connection Pool Configuration"),(0,r.yg)("p",null,"In Doris, each Frontend (FE) and Backend (BE) node maintains a connection pool, thus avoiding the need to frequently open and close individual connections to data sources. Each connection within this pool can be used to establish a connection to a data source and perform queries. After operations are completed, connections are returned to the pool for reuse. This not only enhances performance but also reduces system load during connection establishment, and helps to prevent hitting the maximum connection limits of the data sources."),(0,r.yg)("p",null,"The following catalog configuration properties are available for tuning the behavior of the connection pool:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Parameter Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Default Value"),(0,r.yg)("th",{parentName:"tr",align:null},"Description and Behavior"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"connection_pool_min_size")),(0,r.yg)("td",{parentName:"tr",align:null},"1"),(0,r.yg)("td",{parentName:"tr",align:null},"Defines the minimum number of connections that the pool will maintain, ensuring that this number of connections remains active when the keep-alive mechanism is enabled.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"connection_pool_max_size")),(0,r.yg)("td",{parentName:"tr",align:null},"10"),(0,r.yg)("td",{parentName:"tr",align:null},"Specifies the maximum number of connections allowed in the pool. Each catalog corresponding to every FE or BE node can hold up to this number of connections.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"connection_pool_max_wait_time")),(0,r.yg)("td",{parentName:"tr",align:null},"5000"),(0,r.yg)("td",{parentName:"tr",align:null},"Determines the maximum amount of time, in milliseconds, that the client will wait for a connection from the pool if none is immediately available.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"connection_pool_max_life_time")),(0,r.yg)("td",{parentName:"tr",align:null},"1800000"),(0,r.yg)("td",{parentName:"tr",align:null},"Sets the maximum lifetime of connections in the pool, in milliseconds. Connections exceeding this set time limit will be forcibly closed. Additionally, half of this value is used as the minimum evictable idle time for the pool. Connections reaching this idle time are considered for eviction, and the eviction task runs at intervals of one-tenth of the ",(0,r.yg)("inlineCode",{parentName:"td"},"connection_pool_max_life_time"),".")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"connection_pool_keep_alive")),(0,r.yg)("td",{parentName:"tr",align:null},"false"),(0,r.yg)("td",{parentName:"tr",align:null},"Effective only on BE nodes, it controls whether to keep connections that have reached the minimum evictable idle time but not the maximum lifetime active. It is kept false by default to avoid unnecessary resource usage.")))),(0,r.yg)("p",null,"To prevent an accumulation of unused connection pool caches on the BE, the BE ",(0,r.yg)("inlineCode",{parentName:"p"},"jdbc_connection_pool_cache_clear_time_sec")," parameter for the BE can be set to specify the interval for clearing the cache. With a default value of 28800 seconds (8 hours), the BE will forcibly clear all connection pool caches that have not been used beyond this interval."),(0,r.yg)("h2",{id:"guide"},"Guide"),(0,r.yg)("h3",{id:"view-the-jdbc-catalog"},"View the JDBC catalog"),(0,r.yg)("p",null,"You can query all catalogs in the current Doris cluster through SHOW CATALOGS:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"SHOW CATALOGS;\n")),(0,r.yg)("p",null,"Query the creation statement of a catalog through SHOW CREATE CATALOG:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"SHOW CREATE CATALOG <catalog_name>;\n")),(0,r.yg)("h3",{id:"drop-the-jdbc-catalog"},"Drop the JDBC catalog"),(0,r.yg)("p",null,"A catalog can be deleted via DROP CATALOG:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"DROP CATALOG <catalog_name>;\n")),(0,r.yg)("h3",{id:"query-the-jdbc-catalog"},"Query the JDBC catalog"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Use SWITCH to switch the catalog in effect for the current session:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"SWITCH <catalog_name>;\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Query all libraries under the current catalog through SHOW DATABASES:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"SHOW DATABASES FROM <catalog_name>;\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"SHOW DATABASES;\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Use USE to switch the Database that takes effect in the current session:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"USE <database_name>;\n")),(0,r.yg)("p",{parentName:"li"},"Or directly use ",(0,r.yg)("inlineCode",{parentName:"p"},"USE <catalog_name>.<database_name>;")," to switch the Database that takes effect in the current session")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Query all tables under the current catalog through SHOW TABLES:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"SHOW TABLES FROM <catalog_name>.<database_name>;\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"SHOW TABLES FROM <database_name>;\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"SHOW TABLES;\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Query the data of a table under the current catalog through SELECT:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM <table_name>;\n")))),(0,r.yg)("h2",{id:"sql-passthrough"},"SQL Passthrough"),(0,r.yg)("p",null,"In versions prior to Doris 2.0.3, users could only perform query operations (SELECT) through the JDBC catalog.\nStarting from version Doris 2.0.4, users can perform DDL (Data Definition Language) and DML (Data Manipulation Language) operations on JDBC data sources using the ",(0,r.yg)("inlineCode",{parentName:"p"},"CALL")," command."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'CALL EXECUTE_STMT("catalog_name", "raw_stmt_string");\n')),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"EXECUTE_STMT()")," procedure involves two parameters:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Catalog Name: Currently, only the JDBC catalog is supported."),(0,r.yg)("li",{parentName:"ul"},"Execution Statement: Currently, only DDL and DML statements are supported. These statements must use the syntax specific to the JDBC data source.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'CALL EXECUTE_STMT("jdbc_catalog", "insert into db1.tbl1 values(1,2), (3, 4)");\n\nCALL EXECUTE_STMT("jdbc_catalog", "delete from db1.tbl1 where k1 = 2");\n\nCALL EXECUTE_STMT("jdbc_catalog", "create table db1.tbl2 (k1 int)");\n')),(0,r.yg)("h3",{id:"principles-and-limitations"},"Principles and Limitations"),(0,r.yg)("p",null,"Through the ",(0,r.yg)("inlineCode",{parentName:"p"},"CALL EXECUTE_STMT()")," command, Doris directly sends the SQL statements written by the user to the JDBC data source associated with the catalog for execution. Therefore, this operation has the following limitations:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"The SQL statements must be in the syntax specific to the data source, as Doris does not perform syntax and semantic checks."),(0,r.yg)("li",{parentName:"ul"},"It is recommended that table names in SQL statements be fully qualified, i.e., in the ",(0,r.yg)("inlineCode",{parentName:"li"},"db.tbl")," format. If the ",(0,r.yg)("inlineCode",{parentName:"li"},"db")," is not specified, the db name specified in the JDBC catalog JDBC URL will be used."),(0,r.yg)("li",{parentName:"ul"},"SQL statements cannot reference tables outside of the JDBC data source, nor can they reference Doris's tables. However, they can reference tables within the JDBC data source that have not been synchronized to the Doris JDBC catalog."),(0,r.yg)("li",{parentName:"ul"},"When executing DML statements, it is not possible to obtain the number of rows inserted, updated, or deleted; success of the command execution can only be confirmed."),(0,r.yg)("li",{parentName:"ul"},"Only users with LOAD permissions on the catalog can execute this command.")),(0,r.yg)("h2",{id:"supported-datasoures"},"Supported Datasoures"),(0,r.yg)("h3",{id:"mysql"},"MySQL"),(0,r.yg)("h4",{id:"example-2"},"Example"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"mysql 5.7")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_mysql PROPERTIES (\n    "type" = "jdbc",\n    "user" = "root",\n    "password" = "123456",\n    "jdbc_url" = "jdbc:mysql://127.0.0.1:3306/demo",\n    "driver_url" = "mysql-connector-java-5.1.49.jar",\n    "driver_class" = "com.mysql.jdbc.Driver"\n)\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"mysql 8")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_mysql PROPERTIES (\n    "type" = "jdbc",\n    "user" = "root",\n    "password" = "123456",\n    "jdbc_url" = "jdbc:mysql://127.0.0.1:3306/demo",\n    "driver_url" = "mysql-connector-java-8.0.25.jar",\n    "driver_class" = "com.mysql.cj.jdbc.Driver"\n)\n')),(0,r.yg)("h4",{id:"hierarchy-mapping"},"Hierarchy Mapping"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Doris"),(0,r.yg)("th",{parentName:"tr",align:"center"},"MySQL"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Catalog"),(0,r.yg)("td",{parentName:"tr",align:"center"},"MySQL Server")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Database"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Database")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Table"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Table")))),(0,r.yg)("h4",{id:"type-mapping"},"Type Mapping"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"MYSQL Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Doris Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Comment"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"BOOLEAN"),(0,r.yg)("td",{parentName:"tr",align:null},"TINYINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TINYINT"),(0,r.yg)("td",{parentName:"tr",align:null},"TINYINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"MEDIUMINT"),(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"UNSIGNED TINYINT"),(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null},"Doris does not have an UNSIGNED data type, so expand by an order of magnitude")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"UNSIGNED MEDIUMINT"),(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null},"Doris does not have an UNSIGNED data type, so expand by an order of magnitude")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"UNSIGNED INT"),(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null},"Doris does not have an UNSIGNED data type, so expand by an order of magnitude")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"UNSIGNED BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null},"LARGEINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.yg)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"UNSIGNED DECIMAL(p,s)"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL(p+1,s) / STRING"),(0,r.yg)("td",{parentName:"tr",align:null},"If p+1>38, the Doris STRING type will be used.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TIMESTAMP"),(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"YEAR"),(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TIME"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"CHAR"),(0,r.yg)("td",{parentName:"tr",align:null},"CHAR"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"VARCHAR"),(0,r.yg)("td",{parentName:"tr",align:null},"VARCHAR"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"JSON"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null},"For better performance, map JSON from external data sources to STRING instead of JSONB")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"SET"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"BIT"),(0,r.yg)("td",{parentName:"tr",align:null},"BOOLEAN/STRING"),(0,r.yg)("td",{parentName:"tr",align:null},"BIT(1) will be mapped to BOOLEAN, and other BITs will be mapped to STRING")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TINYTEXT\u3001TEXT\u3001MEDIUMTEXT\u3001LONGTEXT"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"BLOB\u3001MEDIUMBLOB\u3001LONGBLOB\u3001TINYBLOB"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TINYSTRING\u3001STRING\u3001MEDIUMSTRING\u3001LONGSTRING"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"BINARY\u3001VARBINARY"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Other"),(0,r.yg)("td",{parentName:"tr",align:null},"UNSUPPORTED"),(0,r.yg)("td",{parentName:"tr",align:null})))),(0,r.yg)("h3",{id:"postgresql"},"PostgreSQL"),(0,r.yg)("h4",{id:"example-3"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_postgresql PROPERTIES (\n    "type" = "jdbc",\n    "user" = "root",\n    "password" = "123456",\n    "jdbc_url" = "jdbc:postgresql://127.0.0.1:5432/demo",\n    "driver_url" = "postgresql-42.5.1.jar",\n    "driver_class" = "org.postgresql.Driver"\n);\n')),(0,r.yg)("h4",{id:"hierarchy-mapping-1"},"Hierarchy Mapping"),(0,r.yg)("p",null,'As for data mapping from PostgreSQL to Doris, one Database in Doris corresponds to one schema in the specified database in PostgreSQL (for example, "demo" in ',(0,r.yg)("inlineCode",{parentName:"p"},"jdbc_url"),"  above), and one Table in that Database corresponds to one table in that schema. To make it more intuitive, the mapping relations are as follows:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Doris"),(0,r.yg)("th",{parentName:"tr",align:"center"},"PostgreSQL"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Catalog"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Database")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Database"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Schema")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Table"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Table")))),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"Doris obtains all schemas that PG user can access through the SQL statement: ",(0,r.yg)("inlineCode",{parentName:"p"},"select nspname from pg_namespace where has_schema_privilege('<UserName>', nspname, 'USAGE');")," and map these schemas to doris database.   ")),(0,r.yg)("h4",{id:"type-mapping-1"},"Type Mapping"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"POSTGRESQL Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Doris Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Comment"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"boolean"),(0,r.yg)("td",{parentName:"tr",align:null},"BOOLEAN"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"smallint/int2"),(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"integer/int4"),(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"bigint/int8"),(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"decimal/numeric"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"real/float4"),(0,r.yg)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"double precision"),(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"smallserial"),(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"serial"),(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"bigserial"),(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"char"),(0,r.yg)("td",{parentName:"tr",align:null},"CHAR"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"varchar/text"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"timestamp"),(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"date"),(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"json/jsonb"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null},"For better performance, map JSON from external data sources to STRING instead of JSONB")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"time"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"interval"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"point/line/lseg/box/path/polygon/circle"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"cidr/inet/macaddr"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"bit"),(0,r.yg)("td",{parentName:"tr",align:null},"BOOLEAN/STRING"),(0,r.yg)("td",{parentName:"tr",align:null},"bit(1) will be mapped to BOOLEAN, and other bits will be mapped to STRING")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"uuid"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Other"),(0,r.yg)("td",{parentName:"tr",align:null},"UNSUPPORTED"),(0,r.yg)("td",{parentName:"tr",align:null})))),(0,r.yg)("h3",{id:"oracle"},"Oracle"),(0,r.yg)("h4",{id:"example-4"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_oracle PROPERTIES (\n    "type" = "jdbc",\n    "user" = "root",\n    "password" = "123456",\n    "jdbc_url" = "jdbc:oracle:thin:@127.0.0.1:1521:helowin",\n    "driver_url" = "ojdbc8.jar",\n    "driver_class" = "oracle.jdbc.driver.OracleDriver"\n);\n')),(0,r.yg)("h4",{id:"hierarchy-mapping-2"},"Hierarchy Mapping"),(0,r.yg)("p",null,"As for data mapping from Oracle to Doris, one Database in Doris corresponds to one User, and one Table in that Database corresponds to one table that the User has access to. In conclusion, the mapping relations are as follows:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Doris"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Oracle"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Catalog"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Database")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Database"),(0,r.yg)("td",{parentName:"tr",align:"center"},"User")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Table"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Table")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"NOTE:")," Synchronizing Oracle's SYNONYM TABLE is not currently supported."),(0,r.yg)("h4",{id:"type-mapping-2"},"Type Mapping"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"ORACLE Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Doris Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Comment"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"number(p) / number(p,0)"),(0,r.yg)("td",{parentName:"tr",align:null},"TINYINT/SMALLINT/INT/BIGINT/LARGEINT"),(0,r.yg)("td",{parentName:"tr",align:null},"Doris will determine the type to map to based on the value of p: ",(0,r.yg)("inlineCode",{parentName:"td"},"p < 3")," -> ",(0,r.yg)("inlineCode",{parentName:"td"},"TINYINT"),"; ",(0,r.yg)("inlineCode",{parentName:"td"},"p < 5")," -> ",(0,r.yg)("inlineCode",{parentName:"td"},"SMALLINT"),"; ",(0,r.yg)("inlineCode",{parentName:"td"},"p < 10")," -> ",(0,r.yg)("inlineCode",{parentName:"td"},"INT"),"; ",(0,r.yg)("inlineCode",{parentName:"td"},"p < 19")," -> ",(0,r.yg)("inlineCode",{parentName:"td"},"BIGINT"),"; ",(0,r.yg)("inlineCode",{parentName:"td"},"p > 19")," -> ",(0,r.yg)("inlineCode",{parentName:"td"},"LARGEINT"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"number(p,s), ","[ if(s>0 && p>s) ]"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL(p,s)"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"number(p,s), ","[ if(s>0 && p < s) ]"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL(s,s)"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"number(p,s), ","[ if(s<0) ]"),(0,r.yg)("td",{parentName:"tr",align:null},"TINYINT/SMALLINT/INT/BIGINT/LARGEINT"),(0,r.yg)("td",{parentName:"tr",align:null},"if s<0, Doris will set ",(0,r.yg)("inlineCode",{parentName:"td"},"p")," to `p+")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"number"),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Doris does not support Oracle ",(0,r.yg)("inlineCode",{parentName:"td"},"NUMBER")," type that does not specified p and s")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"float/real"),(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TIMESTAMP"),(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"CHAR/NCHAR"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"VARCHAR2/NVARCHAR2"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"LONG/ RAW/ LONG RAW/ INTERVAL"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Other"),(0,r.yg)("td",{parentName:"tr",align:null},"UNSUPPORTED"),(0,r.yg)("td",{parentName:"tr",align:null})))),(0,r.yg)("h3",{id:"sqlserver"},"SQLServer"),(0,r.yg)("h4",{id:"example-5"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_sqlserve PROPERTIES (\n    "type" = "jdbc",\n    "user" = "SA",\n    "password" = "Doris123456",\n    "jdbc_url" = "jdbc:sqlserver://localhost:1433;DataBaseName=doris_test",\n    "driver_url" = "mssql-jdbc-11.2.3.jre8.jar",\n    "driver_class" = "com.microsoft.sqlserver.jdbc.SQLServerDriver"\n);\n')),(0,r.yg)("h4",{id:"hierarchy-mapping-3"},"Hierarchy Mapping"),(0,r.yg)("p",null,'As for data mapping from SQLServer to Doris, one Database in Doris corresponds to one schema in the specified database in SQLServer (for example, "doris_test" in ',(0,r.yg)("inlineCode",{parentName:"p"},"jdbc_url"),"  above), and one Table in that Database corresponds to one table in that schema. The mapping relations are as follows:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Doris"),(0,r.yg)("th",{parentName:"tr",align:"center"},"SQLServer"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Catalog"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Database")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Database"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Schema")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Table"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Table")))),(0,r.yg)("h4",{id:"type-mapping-3"},"Type Mapping"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"SQLServer Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Doris Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Comment"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"bit"),(0,r.yg)("td",{parentName:"tr",align:null},"BOOLEAN"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"tinyint"),(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null},"SQLServer's tinyint is an unsigned number, so it maps to Doris' SMALLINT")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"smallint"),(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"int"),(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"bigint"),(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"real"),(0,r.yg)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"float"),(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"money"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL(19,4)"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"smallmoney"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL(10,4)"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"decimal/numeric"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"date"),(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"datetime/datetime2/smalldatetime"),(0,r.yg)("td",{parentName:"tr",align:null},"DATETIMEV2"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"char/varchar/text/nchar/nvarchar/ntext"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"time/datetimeoffset"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"timestamp"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null},"Read the hexadecimal display of binary data, which has no practical significance.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Other"),(0,r.yg)("td",{parentName:"tr",align:null},"UNSUPPORTED"),(0,r.yg)("td",{parentName:"tr",align:null})))),(0,r.yg)("h3",{id:"doris"},"Doris"),(0,r.yg)("p",null,"The JDBC catalog supports connecting to another Doris database:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"MySQL 5.7 driver")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_doris PROPERTIES (\n    "type" = "jdbc",\n    "user" = "root",\n    "password" = "123456",\n    "jdbc_url" = "jdbc:mysql://127.0.0.1:9030?useSSL=false",\n    "driver_url" = "mysql-connector-java-5.1.49.jar",\n    "driver_class" = "com.mysql.jdbc.Driver"\n)\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"MySQL 8 driver")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_doris PROPERTIES (\n    "type" = "jdbc",\n    "user" = "root",\n    "password" = "123456",\n    "jdbc_url" = "jdbc:mysql://127.0.0.1:9030?useSSL=false",\n    "driver_url" = "mysql-connector-java-8.0.25.jar",\n    "driver_class" = "com.mysql.cj.jdbc.Driver"\n)\n')),(0,r.yg)("h4",{id:"type-mapping-4"},"Type Mapping"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Doris Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Jdbc Catlog Doris Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Comment"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"BOOLEAN"),(0,r.yg)("td",{parentName:"tr",align:null},"BOOLEAN"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TINYINT"),(0,r.yg)("td",{parentName:"tr",align:null},"TINYINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"LARGEINT"),(0,r.yg)("td",{parentName:"tr",align:null},"LARGEINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.yg)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DECIMALV3"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMALV3/STRING"),(0,r.yg)("td",{parentName:"tr",align:null},"Which type will be selected according to the (precision, scale) of the DECIMAL field")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"CHAR"),(0,r.yg)("td",{parentName:"tr",align:null},"CHAR"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"VARCHAR"),(0,r.yg)("td",{parentName:"tr",align:null},"VARCHAR"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TEXT"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"HLL"),(0,r.yg)("td",{parentName:"tr",align:null},"HLL"),(0,r.yg)("td",{parentName:"tr",align:null},"Query HLL needs to set ",(0,r.yg)("inlineCode",{parentName:"td"},"return_object_data_as_binary=true"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Array"),(0,r.yg)("td",{parentName:"tr",align:null},"Array"),(0,r.yg)("td",{parentName:"tr",align:null},"The internal type adaptation logic of Array refers to the above types, and nested complex types are not supported")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"BITMAP"),(0,r.yg)("td",{parentName:"tr",align:null},"BITMAP"),(0,r.yg)("td",{parentName:"tr",align:null},"Query BITMAP needs to set ",(0,r.yg)("inlineCode",{parentName:"td"},"return_object_data_as_binary=true"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Other"),(0,r.yg)("td",{parentName:"tr",align:null},"UNSUPPORTED"),(0,r.yg)("td",{parentName:"tr",align:null})))),(0,r.yg)("h3",{id:"clickhouse"},"Clickhouse"),(0,r.yg)("h4",{id:"example-6"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_clickhouse PROPERTIES (\n    "type" = "jdbc",\n    "user" = "root",\n    "password" = "123456",\n    "jdbc_url" = "jdbc:clickhouse://127.0.0.1:8123/demo",\n    "driver_url" = "clickhouse-jdbc-0.4.2-all.jar",\n    "driver_class" = "com.clickhouse.jdbc.ClickHouseDriver"\n);\n')),(0,r.yg)("h4",{id:"hierarchy-mapping-4"},"Hierarchy Mapping"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Doris"),(0,r.yg)("th",{parentName:"tr",align:"center"},"ClickHouse"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Catalog"),(0,r.yg)("td",{parentName:"tr",align:"center"},"ClickHouse Server")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Database"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Database")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Table"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Table")))),(0,r.yg)("h4",{id:"type-mapping-5"},"Type Mapping"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"ClickHouse Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Doris Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Comment"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Bool"),(0,r.yg)("td",{parentName:"tr",align:null},"BOOLEAN"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"String"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Date/Date32"),(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DateTime/DateTime64"),(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Float32"),(0,r.yg)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Float64"),(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Int8"),(0,r.yg)("td",{parentName:"tr",align:null},"TINYINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Int16/UInt8"),(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null},"Doris does not have an UNSIGNED data type, so expand by an order of magnitude")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Int32/UInt16"),(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null},"Doris does not have an UNSIGNED data type, so expand by an order of magnitude")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Int64/Uint32"),(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null},"Doris does not have an UNSIGNED data type, so expand by an order of magnitude")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Int128/UInt64"),(0,r.yg)("td",{parentName:"tr",align:null},"LARGEINT"),(0,r.yg)("td",{parentName:"tr",align:null},"Doris does not have an UNSIGNED data type, so expand by an order of magnitude")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Int256/UInt128/UInt256"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null},"Doris does not have a data type of this magnitude, and uses STRING for processing")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMALV3/STRING"),(0,r.yg)("td",{parentName:"tr",align:null},"Which type will be selected according to the (precision, scale) of the DECIMAL field")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Enum/IPv4/IPv6/UUID"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Array"),(0,r.yg)("td",{parentName:"tr",align:null},"ARRAY"),(0,r.yg)("td",{parentName:"tr",align:null},"The internal type adaptation logic of Array refers to the above types, and does not support nested types")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Other"),(0,r.yg)("td",{parentName:"tr",align:null},"UNSUPPORTED"),(0,r.yg)("td",{parentName:"tr",align:null})))),(0,r.yg)("h3",{id:"sap-hana"},"SAP HANA"),(0,r.yg)("h4",{id:"example-7"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_hana PROPERTIES (\n    "type" = "jdbc",\n    "user" = "SYSTEM",\n    "password" = "SAPHANA",\n    "jdbc_url" = "jdbc:sap://localhost:31515/TEST",\n    "driver_url" = "ngdbc.jar",\n    "driver_class" = "com.sap.db.jdbc.Driver"\n)\n')),(0,r.yg)("h4",{id:"hierarchy-mapping-5"},"Hierarchy Mapping"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Doris"),(0,r.yg)("th",{parentName:"tr",align:"center"},"SAP HANA"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Catalog"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Database")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Database"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Schema")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Table"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Table")))),(0,r.yg)("h4",{id:"type-mapping-6"},"Type Mapping"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"SAP HANA Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Doris Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Comment"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"BOOLEAN"),(0,r.yg)("td",{parentName:"tr",align:null},"BOOLEAN"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TINYINT"),(0,r.yg)("td",{parentName:"tr",align:null},"TINYINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"INTERGER"),(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"SMALLDECIMAL"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMALV3"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMALV3/STRING"),(0,r.yg)("td",{parentName:"tr",align:null},"Which type will be selected according to the (precision, scale) of the DECIMAL field")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"REAL"),(0,r.yg)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TIME"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TIMESTAMP"),(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"SECONDDATE"),(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"VARCHAR"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"NVARCHAR"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"ALPHANUM"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"SHORTTEXT"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"CHAR"),(0,r.yg)("td",{parentName:"tr",align:null},"CHAR"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"NCHAR"),(0,r.yg)("td",{parentName:"tr",align:null},"CHAR"),(0,r.yg)("td",{parentName:"tr",align:null})))),(0,r.yg)("h3",{id:"trinopresto"},"Trino/Presto"),(0,r.yg)("h4",{id:"example-8"},"Example"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Trino")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_trino PROPERTIES (\n    "type" = "jdbc",\n    "user" = "hadoop",\n    "password" = "",\n    "jdbc_url" = "jdbc:trino://localhost:9000/hive",\n    "driver_url" = "trino-jdbc-389.jar",\n    "driver_class" = "io.trino.jdbc.TrinoDriver"\n);\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Presto")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_presto PROPERTIES (\n    "type" = "jdbc",\n    "user" = "hadoop",\n    "password" = "",\n    "jdbc_url" = "jdbc:presto://localhost:9000/hive",\n    "driver_url" = "presto-jdbc-0.280.jar",\n    "driver_class" = "com.facebook.presto.jdbc.PrestoDriver"\n);\n')),(0,r.yg)("h4",{id:"hierarchy-mapping-6"},"Hierarchy Mapping"),(0,r.yg)("p",null,'When mapping Trino, Doris\'s Database corresponds to a Schema under the specified catalog in Trino (such as "hive" in the ',(0,r.yg)("inlineCode",{parentName:"p"},"jdbc_url")," parameter in the example). The Table under the Database of Doris corresponds to the Tables under the Schema in Trino. That is, the mapping relationship is as follows:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Doris"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Trino/Presto"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Catalog"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Catalog")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Database"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Schema")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Table"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Table")))),(0,r.yg)("h4",{id:"type-mapping-7"},"Type Mapping"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Trino/Presto Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Doris Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Comment"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"boolean"),(0,r.yg)("td",{parentName:"tr",align:null},"BOOLEAN"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"tinyint"),(0,r.yg)("td",{parentName:"tr",align:null},"TINYINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"smallint"),(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"integer"),(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"bigint"),(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"decimal"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL/DECIMALV3/STRING"),(0,r.yg)("td",{parentName:"tr",align:null},"Which type will be selected according to the (precision, scale) of the DECIMAL field")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"real"),(0,r.yg)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"double"),(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"date"),(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"timestamp"),(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"varchar"),(0,r.yg)("td",{parentName:"tr",align:null},"TEXT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"char"),(0,r.yg)("td",{parentName:"tr",align:null},"CHAR"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"array"),(0,r.yg)("td",{parentName:"tr",align:null},"ARRAY"),(0,r.yg)("td",{parentName:"tr",align:null},"The internal type adaptation logic of Array refers to the above types, and does not support nested types")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"others"),(0,r.yg)("td",{parentName:"tr",align:null},"UNSUPPORTED"),(0,r.yg)("td",{parentName:"tr",align:null})))),(0,r.yg)("h3",{id:"oceanbase"},"OceanBase"),(0,r.yg)("h4",{id:"example-9"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG jdbc_oceanbase PROPERTIES (\n    "type" = "jdbc",\n    "user" = "root",\n    "password" = "123456",\n    "jdbc_url" = "jdbc:oceanbase://127.0.0.1:2881/demo",\n    "driver_url" = "oceanbase-client-2.4.2.jar",\n    "driver_class" = "com.oceanbase.jdbc.Driver"\n)\n')),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"When Doris connects to OceanBase, it will automatically recognize that OceanBase is in MySQL or Oracle mode. Hierarchical correspondence and type mapping refer to ",(0,r.yg)("a",{parentName:"p",href:"#mysql"},"MySQL")," and ",(0,r.yg)("a",{parentName:"p",href:"#oracle"},"Oracle"))),(0,r.yg)("h3",{id:"db2"},"DB2"),(0,r.yg)("h4",{id:"example-10"},"Example"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},'CREATE CATALOG `jdbc_db2` PROPERTIES (\n    "user" = "db2inst1",\n    "type" = "jdbc",\n    "password" = "123456",\n    "jdbc_url" = "jdbc:db2://127.0.0.1:50000/doris",\n    "driver_url" = "jcc-11.5.8.0.jar",\n    "driver_class" = "com.ibm.db2.jcc.DB2Driver"\n);\n')),(0,r.yg)("h4",{id:"hierarchy-mapping-7"},"Hierarchy Mapping"),(0,r.yg)("p",null,'When mapping DB2, Doris\'s Database corresponds to a Schema under the specified DataBase in DB2 (such as "doris" in the ',(0,r.yg)("inlineCode",{parentName:"p"},"jdbc_url")," parameter in the example). The Table under Doris' Database corresponds to the Tables under Schema in DB2. That is, the mapping relationship is as follows:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Doris"),(0,r.yg)("th",{parentName:"tr",align:"center"},"DB2"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Catalog"),(0,r.yg)("td",{parentName:"tr",align:"center"},"DataBase")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Database"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Schema")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Table"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Table")))),(0,r.yg)("h4",{id:"type-mapping-8"},"Type Mapping"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"DB2 Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Trino Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Notes"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null},"SMALLINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null},"INT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null},"BIGINT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE PRECISION"),(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.yg)("td",{parentName:"tr",align:null},"DOUBLE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"REAL"),(0,r.yg)("td",{parentName:"tr",align:null},"FLOAT"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"NUMERIC"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DECFLOAT"),(0,r.yg)("td",{parentName:"tr",align:null},"DECIMAL"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null},"DATE"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TIMESTAMP"),(0,r.yg)("td",{parentName:"tr",align:null},"DATETIME"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"CHAR"),(0,r.yg)("td",{parentName:"tr",align:null},"CHAR"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"CHAR VARYING"),(0,r.yg)("td",{parentName:"tr",align:null},"VARCHAR"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"VARCHAR"),(0,r.yg)("td",{parentName:"tr",align:null},"VARCHAR"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"LONG VARCHAR"),(0,r.yg)("td",{parentName:"tr",align:null},"VARCHAR"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"VARGRAPHIC"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"LONG VARGRAPHIC"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"TIME"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"CLOB"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"XML"),(0,r.yg)("td",{parentName:"tr",align:null},"STRING"),(0,r.yg)("td",{parentName:"tr",align:null})),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"OTHER"),(0,r.yg)("td",{parentName:"tr",align:null},"UNSUPPORTED"),(0,r.yg)("td",{parentName:"tr",align:null})))),(0,r.yg)("h2",{id:"jdbc-drivers"},"JDBC Drivers"),(0,r.yg)("p",null,"It is recommended to use the following versions of Driver to connect to the corresponding database. Other versions of the Driver have not been tested and may cause unexpected problems."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Source"),(0,r.yg)("th",{parentName:"tr",align:"center"},"JDBC Driver Version"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"MySQL 5.x"),(0,r.yg)("td",{parentName:"tr",align:"center"},"mysql-connector-java-5.1.49.jar")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"MySQL 8.x"),(0,r.yg)("td",{parentName:"tr",align:"center"},"mysql-connector-java-8.0.25.jar")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"PostgreSQL"),(0,r.yg)("td",{parentName:"tr",align:"center"},"postgresql-42.5.1.jar")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Oracle"),(0,r.yg)("td",{parentName:"tr",align:"center"},"ojdbc8.jar")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"SQLServer"),(0,r.yg)("td",{parentName:"tr",align:"center"},"mssql-jdbc-11.2.3.jre8.jar")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Doris"),(0,r.yg)("td",{parentName:"tr",align:"center"},"mysql-connector-java-5.1.49.jar / mysql-connector-java-8.0.25.jar")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Clickhouse"),(0,r.yg)("td",{parentName:"tr",align:"center"},"clickhouse-jdbc-0.4.2-all.jar")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"SAP HAHA"),(0,r.yg)("td",{parentName:"tr",align:"center"},"ngdbc.jar")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"Trino/Presto"),(0,r.yg)("td",{parentName:"tr",align:"center"},"trino-jdbc-389.jar / presto-jdbc-0.280.jar")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"OceanBase"),(0,r.yg)("td",{parentName:"tr",align:"center"},"oceanbase-client-2.4.2.jar")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"DB2"),(0,r.yg)("td",{parentName:"tr",align:"center"},"jcc-11.5.8.0.jar")))),(0,r.yg)("h2",{id:"faq"},"FAQ"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"In addition to MySQL, Oracle, PostgreSQL, SQLServer, ClickHouse, SAP HANA, Trino/Presto, OceanBase, DB2, whether it can support more databases"),(0,r.yg)("p",{parentName:"li"},"Currently, Doris is only adapted to MySQL, Oracle, PostgreSQL, SQLServer, ClickHouse, SAP HANA, Trino/Presto, OceanBase, and DB2. Adaptation work for other databases is under planning. In principle, any database that supports JDBC access can Can be accessed through JDBC appearance. If you need to access other surfaces, you are welcome to modify the code and contribute to Doris.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Why does Mojibake occur when Doris tries to read emojis from MySQL external tables?"),(0,r.yg)("p",{parentName:"li"},"In MySQL, utf8mb3 is the default utf8 format. It cannot represent emojis, which require 4-byte encoding. To solve this, when creating MySQL external tables, you need to set utf8mb4 encoding for the corresponding columns, set the server encoding to utf8mb4, and leave the characterEncoding in JDBC URl empty (because utf8mb4 is not supported for this property, and anything other than utf8mb4 will cause a failure to write the emojis)."),(0,r.yg)("p",{parentName:"li"},"You can modify the configuration items globally:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"Modify the my.ini file in the mysql directory (for linux system, modify the my.cnf file in the etc directory)\n[client]\ndefault-character-set=utf8mb4\n\n[mysql]\nSet the mysql default character set\ndefault-character-set=utf8mb4\n\n[mysqld]\nSet the mysql character set server\ncharacter-set-server=utf8mb4\ncollation-server=utf8mb4_unicode_ci\ninit_connect='SET NAMES utf8mb4\n\nModify the type for the corresponding tables and columns\nALTER TABLE table_name MODIFY  colum_name  VARCHAR(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\nALTER TABLE table_name CHARSET=utf8mb4;\nSET NAMES utf8mb4\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Exception occurs when reading MySQL date/datetime type"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"ERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.6)[INTERNAL_ERROR]UdfRuntimeException: get next block failed:\nCAUSED BY: SQLException: Zero date value prohibited\nCAUSED BY: DataReadException: Zero date value prohibited\n")),(0,r.yg)("p",{parentName:"li"},"This is because the default handling of illegal Date/DateTime in JDBC is to throw an exception, and this behavior can be controlled through the parameter ",(0,r.yg)("inlineCode",{parentName:"p"},"zeroDateTimeBehavior"),"."),(0,r.yg)("p",{parentName:"li"},"The optional parameters are: ",(0,r.yg)("inlineCode",{parentName:"p"},"EXCEPTION"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"CONVERT_TO_NULL"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"ROUND"),', respectively: exception error reporting, converted to NULL value, converted to "0001-01-01 00:00:00";'),(0,r.yg)("p",{parentName:"li"},"You need to add ",(0,r.yg)("inlineCode",{parentName:"p"},"zeroDateTimeBehavior=convertToNull")," to the end of the JDBC connection string when creating the catalog ",(0,r.yg)("inlineCode",{parentName:"p"},"jdbc_url"),", such as ",(0,r.yg)("inlineCode",{parentName:"p"},'"jdbc_url" = "jdbc:mysql://127.0.0.1:3306/test?zeroDateTimeBehavior=convertToNull"'),"\nIn this case, JDBC will convert 0000-00-00 or 0000-00-00 00:00:00 into null, and then Doris will process all Date/DateTime type columns in the current catalog as nullable types, so that It can be read normally.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"When reading the MySQL table or other tables, a class loading failure occurs."),(0,r.yg)("p",{parentName:"li"},"Such as the following exception:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"failed to load driver class com.mysql.jdbc.driver in either of hikariconfig class loader\n")),(0,r.yg)("p",{parentName:"li"},"This is because when creating the catalog, the driver_class filled in is incorrect and needs to be filled in correctly. For example, the above example has a case problem and should be filled in as ",(0,r.yg)("inlineCode",{parentName:"p"},'"driver_class" = "com.mysql.jdbc.Driver"'))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Communication link abnormality occurs when reading MySQL"),(0,r.yg)("p",{parentName:"li"}," If the following error occurs:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"ERROR 1105 (HY000): errCode = 2, detailMessage = PoolInitializationException: Failed to initialize pool: Communications link failure\n\nThe last packet successfully received from the server was 7 milliseconds ago. The last packet sent successfully to the server was 4 milliseconds ago.\nCAUSED BY: CommunicationsException: Communications link failure\n    \nThe last packet successfully received from the server was 7 milliseconds ago. The last packet sent successfully to the server was 4 milliseconds ago.\nCAUSED BY: SSLHandshakeExcepti\n")),(0,r.yg)("p",{parentName:"li"}," You can view be\u2019s be.out log"),(0,r.yg)("p",{parentName:"li"}," If the following information is included:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"WARN: Establishing SSL connection without server's identity verification is not recommended.\nAccording to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn't set.\nFor compliance with existing applications not using SSL the verifyServerCertificate property is set to 'false'.\nYou need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.\n")),(0,r.yg)("p",{parentName:"li"},"You can add ",(0,r.yg)("inlineCode",{parentName:"p"},"?useSSL=false")," to the end of the JDBC connection string when creating the catalog, such as ",(0,r.yg)("inlineCode",{parentName:"p"},'"jdbc_url" = "jdbc:mysql://127.0.0.1:3306/test?useSSL=false"'))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"When using JDBC to query large amounts of MYSQL data, if the query is occasionally successful, the following error will occasionally be reported. When this error occurs, all MYSQL connections are disconnected and cannot be connected to MYSQL SERVER. After a while, mysql returns to normal. , but the previous connections are gone:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"ERROR 1105 (HY000): errCode = 2, detailMessage = [INTERNAL_ERROR]UdfRuntimeException: JDBC executor sql has error:\nCAUSED BY: CommunicationsException: Communications link failure\nThe last packet successfully received from the server was 4,446 milliseconds ago. The last packet sent successfully to the server was 4,446 milliseconds ago.\n")),(0,r.yg)("p",{parentName:"li"},"When the above phenomenon occurs, it may be that Mysql Server's own memory or CPU resources are exhausted, causing the Mysql service to be unavailable. You can try to increase the memory or CPU configuration of Mysql Server.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"During the process of using JDBC to query MYSQL, if it is found that the query results are inconsistent with the query results in the MYSQL library"),(0,r.yg)("p",{parentName:"li"},' First, check whether the string in the query field is case-sensitive. For example, there is a field c_1 in Table that contains two pieces of data: "aaa" and "AAA". If no distinguishing string is specified when initializing the MYSQL database,\nCase, then MYSQL is not case-sensitive in strings by default, but in Doris it is strictly case-sensitive, so the following situations will occur:'),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'Mysql behavior:\nselect count(c_1) from table where c_1 = "aaa"; The string size is not distinguished, so the result is: 2\n\nDoris behavior:\nselect count(c_1) from table where c_1 = "aaa"; strictly distinguishes the string size, so the result is: 1\n')),(0,r.yg)("p",{parentName:"li"},"If the above phenomenon occurs, it needs to be adjusted according to needs, as follows:"),(0,r.yg)("p",{parentName:"li"},'Add the "BINARY" keyword to force case sensitivity when querying in MYSQL: select count(c_1) from table where BINARY c_1 = "aaa"; or specify when creating a table in MYSQL:\nCREATE TABLE table ( c_1 VARCHAR(255) CHARACTER SET binary ); Or specify collation rules to make case sensitive when initializing the MYSQL database:\ncharacter-set-server=UTF-8 and collation-server=utf8_bin.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Communication link abnormality occurs when reading SQL Server"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},'ERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.6)[CANCELLED][INTERNAL_ERROR]UdfRuntimeException: Initialize datasource failed:\nCAUSED BY: SQLServerException: The driver could not establish a secure connection to SQL Server by using Secure Sockets Layer (SSL) encryption.\nError: "sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException:\nunable to find valid certification path to requested target". ClientConnectionId:a92f3817-e8e6-4311-bc21-7c66\n')),(0,r.yg)("p",{parentName:"li"},"You can add ",(0,r.yg)("inlineCode",{parentName:"p"},"encrypt=false")," to the end of the JDBC connection string when creating the catalog, such as ",(0,r.yg)("inlineCode",{parentName:"p"},'"jdbc_url" = "jdbc:sqlserver://127.0.0.1:1433;DataBaseName=doris_test;encrypt=false"'))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"Non supported character set (add orai18n.jar in your classpath): ZHS16GBK")," exception occurs when reading Oracle"),(0,r.yg)("p",{parentName:"li"},"Download ",(0,r.yg)("a",{parentName:"p",href:"https://www.oracle.com/database/technologies/appdev/jdbc-downloads.html"},"orai18n.jar")," and put it in the lib directory of Doris FE and the lib/java_extensions directory of BE (versions before Doris 2.0 It needs to be placed in the lib directory of BE)."),(0,r.yg)("p",{parentName:"li"},"Starting from version 2.0.2, this file can be placed in the ",(0,r.yg)("inlineCode",{parentName:"p"},"custom_lib/")," directory of FE and BE (if it does not exist, just create it manually) to prevent the file from being lost when the lib directory is replaced when upgrading the cluster.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"NoClassDefFoundError: net/jpountz/lz4/LZ4Factory")," error message appears when reading Clickhouse data through jdbc catalog"),(0,r.yg)("p",{parentName:"li"},"You can download the ",(0,r.yg)("a",{parentName:"p",href:"https://repo1.maven.org/maven2/net/jpountz/lz4/lz4/1.3.0/lz4-1.3.0.jar"},"lz4-1.3.0.jar")," package first, and then put it in DorisFE lib directory and BE's ",(0,r.yg)("inlineCode",{parentName:"p"},"lib/lib/java_extensions")," directory (versions before Doris 2.0 need to be placed in BE's lib directory)."),(0,r.yg)("p",{parentName:"li"},"Starting from version 2.0.2, this file can be placed in the ",(0,r.yg)("inlineCode",{parentName:"p"},"custom_lib/")," directory of FE and BE (if it does not exist, just create it manually) to prevent the file from being lost due to the replacement of the lib directory when upgrading the cluster.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},'If there is a prolonged delay or no response when querying MySQL through JDBC catalog, or if it hangs for an extended period and a significant number of "write lock" logs appear in the fe.warn.log, consider adding a socketTimeout parameter to the URL. For example: ',(0,r.yg)("inlineCode",{parentName:"p"},"jdbc:mysql://host:port/database?socketTimeout=30000"),". This prevents the JDBC client from waiting indefinitely after MySQL closes the connection."))))}m.isMDXComponent=!0}}]);